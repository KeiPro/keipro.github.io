---
layout: post
title: clean-code 2. 의미 있는 이름.
date: 2024-01-28 14:40:00 +0900
category: CleanCode
---

# 2장. 의미 있는 이름

### [ 오늘 읽은 범위 : 2장, 의미 있는 이름 ]

## 책에서 기억하고 싶은 내용.

#### 이름을 잘 짓는 간단한 규칙들.

- 좋은 이름을 지으려면 시간이 걸리지만 좋은 이름으로 절약하는 시간이 훨씬 더 많기 때문에 **의도가 분명하게 이름을 지어라.**

- 서로 흡사한 이름을 사용하지 않도록 주의한다.

  - 읽는 사람이 차이를 알도록 이름을 지어라.<br>
    ex) accountData, accountInfo > 이런 식의 변수 이름은 차이가 없다.

- 명료한 이름을 선택하라.

- 메서드 이름은 독자적이고 일관적이어야 한다.

## 오늘 읽은 소감은? 떠오르는 생각을 가볍게 적어보세요.

<br>
2장에는 정말 중요한 내용이 들어있는 것 같다. 변수의 이름이나, 클래스, 메소드의 이름을 잘 짓는 규칙들에 대해서 작성이 되어 있는데, 사실 이 규칙들만 제대로 이행해도 읽기에 정말 괜찮은 코드가 된다고 생각한다. 1장에서 소개된, 깨끗한 코드(가독성이 좋게 만들어진)와 함께 이름을 잘 짓게 된다면 웬만하면 코드는 이해하기 좋게 만들어질 것이라 생각한다. 물론, 기존에 돌아가던 코드를 구조적으로 개선해서 코드의 품질을 올리는 과정들도 중요하겠지만 해당 과정에서도 가장 기본적으로 받쳐줘야 되는 내용은 1장과 2장에서 소개된 내용이라 생각한다. 잘한다고 생각하는 사람들의 코드를 보았을 때, 기본적으로 깨끗한 코드와 네이밍에 대해서 깔끔하게 지어져 있는 것을 확인할 수 있다. 때문에, 1장과 2장에 대한 내용은 뼈에 새기고 프로그래밍을 해보는 것이 좋을 것 같다.
<br>

## 이 책 왜 읽으시나요?

<br>
이 책을 읽는 이유는 프로그래밍을 할 때 더 좋은 품질의 코드를 만들어 내기 위함이다. 코딩은 아무나 할 수 있지만, 깔끔한 코드를 만들어 내는 것은 아무나 할 수 있는 영역이 아니라 생각한다. 이 책을 한 번 읽는다고 해서 정답에 가까운 그런 깨끗한 코드를 한 번에 만들어 낼 순 없을 것이다. 하지만 깨끗한 코드를 만드는 방법에 한 발자국이라도 앞으로 나아갈 수 있다면 성공, 성장하는 것이라 생각하기 때문에 이 책을 읽기로 하였다. 또한, 내 코드가 언제 어디서 다른 사람들에게 공유가 될 지 모르기도 하고, 만약 공유가 되는 상황이 발생한다면, 보기 싫은 코드를 제공해주고 싶지는 않다.

<br>
#노개북 #노마드코더 #개발자북클럽
